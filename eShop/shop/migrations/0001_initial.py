# Generated by Django 4.1.3 on 2022-12-03 11:12

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, verbose_name='Название категории')),
                ('slug', models.CharField(max_length=250, unique=True, verbose_name='Slug')),
                ('image', models.ImageField(blank=True, upload_to='images/%Y/%m%d', verbose_name='Фото категории')),
            ],
        ),
        migrations.CreateModel(
            name='ProductColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color_name', models.CharField(max_length=150, verbose_name='Цвет')),
                ('slug', models.CharField(max_length=250, unique=True, verbose_name='Slug')),
            ],
        ),
        migrations.CreateModel(
            name='ProductSize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size_name', models.CharField(max_length=150, verbose_name='Размер')),
                ('slug', models.CharField(max_length=250, unique=True, verbose_name='Slug')),
            ],
        ),
        migrations.CreateModel(
            name='UserEmails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=250, unique=True, verbose_name='email')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Название продукта')),
                ('slug', models.CharField(max_length=250, unique=True, verbose_name='Slug')),
                ('price', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Цена')),
                ('image', models.ImageField(upload_to='images/%Y/%m/%d', verbose_name='Фото')),
                ('image2', models.ImageField(blank=True, upload_to='images/%Y/%m/%d', verbose_name='Фото 2')),
                ('image3', models.ImageField(blank=True, upload_to='images/%Y/%m/%d', verbose_name='Фото 3')),
                ('image4', models.ImageField(blank=True, upload_to='images/%Y/%m/%d', verbose_name='Фото 4')),
                ('description', models.TextField(verbose_name='Описание')),
                ('specification', models.TextField(verbose_name='Спецификация')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Добавлено')),
                ('featured', models.BooleanField(default=False)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='shop.category', verbose_name='Категория')),
                ('color', models.ManyToManyField(to='shop.productcolor', verbose_name='Цвет')),
                ('size', models.ManyToManyField(blank=True, to='shop.productsize', verbose_name='Размер')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(max_length=200, unique=True, verbose_name='email')),
                ('username', models.CharField(max_length=200, unique=True, verbose_name='username')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='last login')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('first_name', models.CharField(max_length=150, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=150, verbose_name='Last Name')),
                ('mobile', models.CharField(max_length=30, unique=True, verbose_name='Phone number')),
                ('address', models.CharField(max_length=150, verbose_name='Address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
